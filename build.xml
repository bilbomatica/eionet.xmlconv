<project name="xmlconv" default="buildjar" basedir=".">
	<!-- set global properties for this build -->
	<property name="src" value="src"/>
        <property file="${basedir}/build.properties" />
	<property name="lib" value="public/WEB-INF/lib"/>
	<property name="classes.dir" value="public/WEB-INF/classes"/>
	<target name="make_gzip" depends="check_os" if="is_unix">
		<tar tarfile="xmlconv.tar">
			<tarfileset dir=".." prefix="xmlconv"/>
		</tar>
		<gzip zipfile="xmlconv.tar.gz" src="../xmlconv.tar"/>
		<!--delete file="xmlconv.tar"/-->
	</target>
	<target name="make_zip" depends="check_os" if="is_win">
		<!--target name="make_zip" depends="check_os" if="is_win"-->
		<zip destfile="xmlconv.zip">
			<zipfileset dir=".." prefix="xmlconv"/>
		</zip>
	</target>
	<target name="make_package" depends="make_gzip,make_zip">
		<antcall target="clean"/>
	</target>
	<!-- if it is installed as a new virtual host -->
	<target name="root_context" if="vhost">
		<copy file="ROOT.xml" todir="${prefix}/xmlconv" overwrite="true"/>
		<copy file="xmlconv_vhost_server.xml" todir="${prefix}/xmlconv" overwrite="true"/>
		<echo>==================================================================</echo>
		<echo>=== You are installing GDEM application as a virtual host</echo>
		<echo>=== Remember to add a virtual host TAG into  the server.xml</echo>
		<echo>=== if not existing yet																		</echo>
		<echo>=== Look example at: ${prefix}/xmlconv/xmlconv_vhost_server.xml	</echo>
		<echo>==================================================================</echo>
		<echo>=== NB! NO CONTEXT TAG IS NEEDED inside Host tag at server.xml</echo>
		<echo>=== Tomcat loads it from ${prefix}/xmlconv/ROOT.xml							</echo>
		<echo>==================================================================</echo>
	</target>
	<target name="clean_tar" if="is_unix">
		<!--delete file="xmlconv.tar.gz"/-->
		<delete file="xmlconv.tar"/>
	</target>
	<target name="clean_zip" if="is_win">
		<!--delete file="xmlconv.zip"/-->
	</target>
	<target name="clean">
		<delete dir="${classes.dir}"/>
	</target>
	<!-- if it is installed under webapps folder under existing virtual host -->
	<target name="webapp_context" unless="vhost">
		<copy file="xmlconv.xml" todir="${prefix}/xmlconv" overwrite="true"/>
	</target>
	<target name="create_context" depends="webapp_context,root_context"/>
	<target name="check_os">
		<!--fail unless="prefix" message="Usage: ant install -Dprefix={directory to install}"/-->
		<condition property="is_win">
			<os family="windows"/>
		</condition>
		<condition property="is_unix">
			<os family="unix"/>
		</condition>
	</target>
	<target name="compile">
		<!--fail unless="prefix" message="Usage: ant install -Dprefix={directory to install}"/-->
		<!-- Compile the java code from ${src} into ${build} -->
		<echo message="Using java version ${ant.java.version}"/>
		<mkdir dir="${classes.dir}"/>
		<javac debug="on" deprecation="off" srcdir="${src}" destdir="${classes.dir}" classpath="${lib}/avalon.jar;
						            ${lib}/uit-security.jar;
                                    ${lib}/uit-client.jar;
									${lib}/casclient.jar;
                                    ${lib}/commons-fileupload-1.0.jar;
						            ${lib}/commons-beanutils-1.6.1.jar;
                                    ${lib}/batik.jar;
                                    ${lib}/fop.jar;
                                    ${lib}/poi-2.5.1-final-20040804.jar;
                                    ${lib}/servlet-api.jar;
                                    ${lib}/jsp-api.jar;
                                    ${lib}/struts-1.2.4.jar;
                                    ${lib}/jstl.jar;
                                    ${lib}/MetadataAggregator.jar;
                                    ${lib}/saxon7.jar;
                                    ${lib}/log4j.jar;
                                    ${lib}/xalan-j2-2.6.0.jar;
                                    ${lib}/xml-apis.jar;
                                    ${lib}/xercesImpl.jar;"/>
	</target>
	<!-- build xmlconv.jar -->
	<target name="buildjar" depends="compile">
		<jar basedir="${classes.dir}" jarfile="public/WEB-INF/lib/xmlconv.jar" includes="**/*.class"/>
		<!--delete dir="${classes.dir}/eionet"/-->
	</target>
	<target name="install" depends="copyfiles">
		<antcall target="checkProps"/>
		<antcall target="create_context"/>
	</target>
	<!-- put buildjar back -->
	<target name="copyfiles" depends="buildjar">
		<!-- we do not care about these files older versions -->
		<copy file="GDEMServices.xml" tofile="${prefix}/xmlconv/GDEMServices.xml" overwrite="true"/>
		<copy todir="${prefix}/xmlconv/public" overwrite="true">
			<fileset dir="public">
				<exclude name="**/*.java"/>
				<exclude name="**/*.properties"/>
			</fileset>
		</copy>
		<copy todir="${prefix}/xmlconv/${classes.dir}" overwrite="false">
			<fileset dir="${src}" includes="**/*.properties">
				<exclude name="**/*.class"/>
			</fileset>
		</copy>
		<!-- should take care of not overwriting them -->
		<copy todir="${prefix}/xmlconv/public/xsl">
			<fileset dir="public/xsl"/>
		</copy>
		<condition property="uit.needed">
			<not>
				<available file="${prefix}/xmlconv/public/WEB-INF/classes/uit.properties"/>
			</not>
		</condition>
		<condition property="xmlconv.needed">
			<not>
				<available file="${prefix}/xmlconv/public/WEB-INF/classes/gdem.properties"/>
			</not>
		</condition>
		<condition property="log4j.needed">
			<not>
				<available file="${prefix}/xmlconv/public/WEB-INF/classes/log4j.properties"/>
			</not>
		</condition>
		<antcall target="copy_props"/>
	</target>
	<target name="checkProps">
		<loadproperties srcFile="${prefix}/xmlconv/public/WEB-INF/classes/gdem.properties"/>
		<condition property="tmp.needed">
			<not>
				<isset property="tmp.folder"/>
			</not>
		</condition>
		<condition property="xsl.needed">
			<not>
				<isset property="xsl.folder"/>
			</not>
		</condition>
		<condition property="queries.needed">
			<not>
				<isset property="queries.folder"/>
			</not>
		</condition>
		<loadproperties srcFile="${prefix}/xmlconv/public/WEB-INF/classes/uit.properties"/>
		<condition property="srvdef.not.available">
			<not>
				<available file="${services.definition.file}"/>
			</not>
		</condition>
		<condition property="xslfolder.not.exist">
			<and>
				<isset property="xsl.folder"/>
				<not>
					<available file="${xsl.folder}" type="dir"/>
				</not>
			</and>
		</condition>
		<condition property="queriesfolder.not.exist">
			<and>
				<isset property="queries.folder"/>
				<not>
					<available file="${queries.folder}" type="dir"/>
				</not>
			</and>
		</condition>
		<fail if="tmp.needed" message="Property 'tmp.folder'  is missing from ${prefix}/xmlconv/public/WEB-INF/classes/gdem.properties"/>
		<fail if="xsl.needed" message="Property 'xsl.folder'  is missing from ${prefix}/xmlconv/public/WEB-INF/classes/gdem.properties"/>
		<fail if="queries.needed" message="Property 'queries.folder'  is missing from ${prefix}/xmlconv/public/WEB-INF/classes/gdem.properties"/>
		<antcall target="warn_definition"/>
		<antcall target="warn_xsl"/>
	</target>
	<target name="warn_xsl" if="xslfolder.not.exist">
		<echo message="========================================================================="/>
		<echo message="XSL folder was not available at: ${xsl.folder}"/>
		<echo message="Create the folder or make a change in gdem.properties"/>
		<echo message="========================================================================="/>
		<!--mkdir dir="${xsl.folder}"/-->
	</target>
	<target name="warn_queries" if="queriesfolder.not.exist">
		<echo message="========================================================================="/>
		<echo message="Queries folder was not available at: ${queries.folder}"/>
		<echo message="Create the folder or make a change in gdem.properties"/>
		<echo message="========================================================================="/>
		<!--mkdir dir="${xsl.folder}"/-->
	</target>
	<target name="warn_definition" if="srvdef.not.available">
		<echo message="========================================================================="/>
		<echo message="Services definition file is not available at: ${services.definition.file}"/>
		<echo message="Please specify the correct location in uit.properties"/>
		<echo message="========================================================================="/>
	</target>
	<target name="copy_props">
		<antcall target="cp_uit"/>
		<antcall target="cp_xmlconv"/>
		<antcall target="cp_log4j"/>
	</target>
	<target name="cp_uit" if="uit.needed">
		<copy file="${src}/uit.properties" tofile="${prefix}/xmlconv/public/WEB-INF/classes/uit.properties"/>
	</target>
	<target name="cp_log4j" if="log4j.needed">
		<copy file="${src}/log4j.properties" tofile="${prefix}/xmlconv/public/WEB-INF/classes/log4j.properties"/>
	</target>
	<target name="cp_xmlconv" if="xmlconv.needed">
		<copy file="${src}/gdem.properties" tofile="${prefix}/xmlconv/public/WEB-INF/classes/gdem.properties"/>
	</target>
</project>
